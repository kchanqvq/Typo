(in-package #:typo)

;;; A list whose entry are of the form (type-specifier bits).
(defparameter *primitive-ntype-information*
  (sort
   (remove-duplicates
    (append
     `((t ,+word-bits+)
       (nil 0)
       (short-float ,+short-float-bits+)
       (single-float ,+single-float-bits+)
       (double-float ,+double-float-bits+)
       (long-float ,+long-float-bits+)
       (float ,(max +short-float-bits+ +single-float-bits+ +double-float-bits+ +long-float-bits+))
       ((signed-byte 8) 8)
       ((signed-byte 16) 16)
       ((signed-byte 32) 32)
       ((signed-byte 64) 64)
       (bit 1)
       ((unsigned-byte 1) 1)
       ((unsigned-byte 2) 8)
       ((unsigned-byte 4) 8)
       ((unsigned-byte 8) 8)
       ((unsigned-byte 16) 16)
       ((unsigned-byte 32) 32)
       ((unsigned-byte 64) 64)
       (fixnum ,+fixnum-bits+)
       (integer ,+word-bits+)
       (ratio ,+word-bits+)
       (rational ,+word-bits+)
       (real ,+word-bits+)
       ((complex short-float) ,(* 2 +short-float-bits+))
       ((complex single-float) ,(* 2 +single-float-bits+))
       ((complex double-float) ,(* 2 +double-float-bits+))
       ((complex long-float) ,(* 2 +long-float-bits+))
       (complex ,(* 2 +word-bits+))
       (number ,+word-bits+)
       (array ,+word-bits+)
       (function ,+word-bits+)
       (symbol ,+word-bits+)
       (null ,+word-bits+)
       (list ,+word-bits+)
       (base-char ,(integer-length (1- char-code-limit)))
       (character ,(integer-length (1- char-code-limit)))
       (logical-pathname ,+word-bits+)
       (pathname ,+word-bits+)
       (class ,+word-bits+)
       ((not null) ,+word-bits+)))
    :key #'first
    :test #'alexandria:type=
    :from-end t)
   #'subtypep
   :key #'first))

(deftype ntype-index ()
  `(integer 0 ,(length *primitive-ntype-information*)))
